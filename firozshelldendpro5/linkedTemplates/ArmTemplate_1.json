{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "firozshelldendpro5"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/dataflow title adls to asa')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_TitleMaster",
								"type": "DatasetReference"
							},
							"name": "sourceTitleAdls"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_asa_NYC_Payroll_TITLE_MD",
								"type": "DatasetReference"
							},
							"name": "sinkTitleASA"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          TitleCode as string,",
						"          TitleDescription as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> sourceTitleAdls",
						"sourceTitleAdls sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          TitleCode as string,",
						"          TitleDescription as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          TitleCode,",
						"          TitleDescription",
						"     )) ~> sinkTitleASA"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflownycpayroll2021')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "copy data from source to destination",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_nycpayroll_2021",
								"type": "DatasetReference"
							},
							"name": "sourcenycpayroll2021"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_sqldb_NYC_Payroll_Data",
								"type": "DatasetReference"
							},
							"name": "sinknycpayroll2021"
						}
					],
					"transformations": [
						{
							"name": "startdatetypemodification"
						}
					],
					"scriptLines": [
						"source(output(",
						"          FiscalYear as string,",
						"          PayrollNumber as string,",
						"          AgencyCode as string,",
						"          AgencyName as string,",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string,",
						"          AgencyStartDate as string,",
						"          WorkLocationBorough as string,",
						"          TitleCode as string,",
						"          TitleDescription as string,",
						"          LeaveStatusasofJune30 as string,",
						"          BaseSalary as string,",
						"          PayBasis as string,",
						"          RegularHours as string,",
						"          RegularGrossPaid as string,",
						"          OTHours as string,",
						"          TotalOTPaid as string,",
						"          TotalOtherPay as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> sourcenycpayroll2021",
						"sourcenycpayroll2021 derive(AgencyStartDate = toTimestamp(AgencyStartDate,'mm/dd/yyyy')) ~> startdatetypemodification",
						"startdatetypemodification sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          FiscalYear as integer,",
						"          PayrollNumber as integer,",
						"          AgencyID as string,",
						"          AgencyName as string,",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string,",
						"          AgencyStartDate as date,",
						"          WorkLocationBorough as string,",
						"          TitleCode as string,",
						"          TitleDescription as string,",
						"          LeaveStatusasofJune30 as string,",
						"          BaseSalary as double,",
						"          PayBasis as string,",
						"          RegularHours as double,",
						"          RegularGrossPaid as double,",
						"          OTHours as double,",
						"          TotalOTPaid as double,",
						"          TotalOtherPay as double",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          FiscalYear,",
						"          PayrollNumber,",
						"          AgencyID = AgencyCode,",
						"          AgencyName,",
						"          EmployeeID,",
						"          LastName,",
						"          FirstName,",
						"          AgencyStartDate,",
						"          WorkLocationBorough,",
						"          TitleCode,",
						"          TitleDescription,",
						"          LeaveStatusasofJune30,",
						"          BaseSalary,",
						"          PayBasis,",
						"          RegularHours,",
						"          RegularGrossPaid,",
						"          OTHours,",
						"          TotalOTPaid,",
						"          TotalOtherPay",
						"     )) ~> sinknycpayroll2021"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflowtotalpayroll')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_sqldb_NYC_Payroll_Data",
								"type": "DatasetReference"
							},
							"name": "source1SQLDBPayroll"
						},
						{
							"dataset": {
								"referenceName": "historydata",
								"type": "DatasetReference"
							},
							"name": "source2HistoryPayroll"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "table_synapse_nycpayroll_summary",
								"type": "DatasetReference"
							},
							"name": "sinkPayrollSummary"
						}
					],
					"transformations": [
						{
							"name": "derivedColumnSource2"
						},
						{
							"name": "PayrollDataunion1"
						},
						{
							"name": "FiscalYearfilter"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     dataflow_param_fiscalyear as integer (2020)",
						"}",
						"source(output(",
						"          FiscalYear as integer,",
						"          PayrollNumber as integer,",
						"          AgencyID as string,",
						"          AgencyName as string,",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string,",
						"          AgencyStartDate as date,",
						"          WorkLocationBorough as string,",
						"          TitleCode as string,",
						"          TitleDescription as string,",
						"          LeaveStatusasofJune30 as string,",
						"          BaseSalary as double,",
						"          PayBasis as string,",
						"          RegularHours as double,",
						"          RegularGrossPaid as double,",
						"          OTHours as double,",
						"          TotalOTPaid as double,",
						"          TotalOtherPay as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1SQLDBPayroll",
						"source(output(",
						"          FiscalYear as string,",
						"          PayrollNumber as string,",
						"          AgencyID as string,",
						"          AgencyName as string,",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string,",
						"          AgencyStartDate as string,",
						"          WorkLocationBorough as string,",
						"          TitleCode as string,",
						"          TitleDescription as string,",
						"          LeaveStatusasofJune30 as string,",
						"          BaseSalary as string,",
						"          PayBasis as string,",
						"          RegularHours as string,",
						"          RegularGrossPaid as string,",
						"          OTHours as string,",
						"          TotalOTPaid as string,",
						"          TotalOtherPay as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source2HistoryPayroll",
						"source2HistoryPayroll derive(FiscalYear = toInteger(FiscalYear),",
						"          PayrollNumber = toInteger(PayrollNumber),",
						"          AgencyStartDate = toDate(AgencyStartDate, 'mm/dd/yyyy'),",
						"          BaseSalary = toDouble(BaseSalary),",
						"          RegularHours = toDouble(RegularHours),",
						"          RegularGrossPaid = toDouble(RegularGrossPaid),",
						"          OTHours = toDouble(OTHours),",
						"          TotalOTPaid = toDouble(TotalOTPaid),",
						"          TotalOtherPay = toDouble(TotalOtherPay)) ~> derivedColumnSource2",
						"source1SQLDBPayroll, derivedColumnSource2 union(byName: true)~> PayrollDataunion1",
						"PayrollDataunion1 filter(toInteger(FiscalYear) >= $dataflow_param_fiscalyear) ~> FiscalYearfilter",
						"FiscalYearfilter derive(TotalPaid = RegularGrossPaid + TotalOTPaid+TotalOtherPay) ~> derivedColumn1",
						"derivedColumn1 aggregate(groupBy(AgencyName,",
						"          FiscalYear),",
						"     NumberofEmployess = count(EmployeeID),",
						"          MinBasePay = min(BaseSalary),",
						"          MaxBasePay = max(BaseSalary),",
						"          AverageBasePay = avg(BaseSalary),",
						"          AverageOTHours = avg(OTHours),",
						"          AverageOTPay = round(avg(TotalOTPaid),3),",
						"          TotalOtherPay = sum(TotalOtherPay),",
						"          TotalPay = round(sum(TotalPaid),3)) ~> aggregate1",
						"aggregate1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          FiscalYear as integer,",
						"          AgencyName as string,",
						"          TotalPaid as double",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sinkPayrollSummary"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Totalpayrolldatapipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "totalpayrolldataflow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflowtotalpayroll",
								"type": "DataFlowReference",
								"parameters": {
									"dataflow_param_fiscalyear": {
										"value": "@pipeline().parameters.pipe_param_fiscalyr",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"source1SQLDBPayroll": {},
									"source2HistoryPayroll": {},
									"sinkPayrollSummary": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "AzureDataLakeStorage1",
									"type": "LinkedServiceReference"
								},
								"folderPath": "adlsnycpayrollfirozaa/dirstaging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pipe_param_fiscalyr": {
						"type": "int"
					}
				},
				"annotations": [],
				"lastPublishTime": "2022-08-27T16:57:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflowtotalpayroll')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adls to sqldb pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "transfer 2021 Payroll data into transaction table in the SQL DB",
				"activities": [
					{
						"name": "Data flow Payroll 2021",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflownycpayroll2021",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourcenycpayroll2021": {},
									"sinknycpayroll2021": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-08-26T16:55:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflownycpayroll2021')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline EMP ADLS to ASA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow EMP ADLS to ASA",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow EmpMD adls to asa",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"adlsg2Employee": {},
									"sinkasaEmployeeMD": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "AzureDataLakeStorage1",
									"type": "LinkedServiceReference"
								},
								"folderPath": "adlsnycpayrollfirozaa/dirstaging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-08-26T18:30:35Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline Title ADLS to ASA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow title ADLS to ASA",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow title adls to asa",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceTitleAdls": {},
									"sinkTitleASA": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "AzureDataLakeStorage1",
									"type": "LinkedServiceReference"
								},
								"folderPath": "adlsnycpayrollfirozaa/dirstaging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-08-26T18:30:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow title adls to asa')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline curreny Year Data SQLDB to synapse')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "payroll Data SQLDB to Synapse",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow Payroll Data SQLDB to ASA",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourcePayrollDataSQLDB": {},
									"sinkPayrollData": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "AzureDataLakeStorage1",
									"type": "LinkedServiceReference"
								},
								"folderPath": "adlsnycpayrollfirozaa/dirstaging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-08-26T18:17:03Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineAgency ADLS to ADA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Dataflow agency ADLS to ASA",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow Agency ADLS to ASA",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceAgency": {},
									"sinkAgency": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "AzureDataLakeStorage1",
									"type": "LinkedServiceReference"
								},
								"folderPath": "adlsnycpayrollfirozaa/dirstaging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-08-26T18:30:35Z"
			},
			"dependsOn": []
		}
	]
}